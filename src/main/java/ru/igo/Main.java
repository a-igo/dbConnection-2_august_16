package ru.igo;import com.mysql.fabric.jdbc.FabricMySQLDriver;import java.sql.*;public class Main {    private static final String URL = "jdbc:mysql://localhost:3306/sys";    private static final String USERNAME = "root";    private static final String PASSWORD = "1348";    // private static final String URL = "jdbc:mysql://localhost:3306/mydbtest?useSSL=true&autoReconnect=true&serverTimezone=UTC";    public Main() throws SQLException {    }    public static void main(String[] args) {        //// создаем драйвер  /////        try {            Driver driver = new FabricMySQLDriver();            DriverManager.registerDriver(driver);        } catch (SQLException e) {            e.printStackTrace();        }        //// создаем коннекшн. конекшн создаем в специальном блоке try c реурсами        //// чтобы не забыть закрыть его        try (Connection connection = DriverManager.getConnection(URL, USERNAME, PASSWORD)) {            Statement statement = connection.createStatement();            ///// пишем методы по обработке данных в базе в таблице new_table с полями name, age, email////            // вставка новой записи            // statement.execute("INSERT INTO new_table (name, age, email) VALUES ('sergo', 50, 'bazhuk@rambler.ru')");            // метод update замена значения в поле по идентификатору / также метод может вернуть количество записей в которые внесены изменения            //int i = statement.executeUpdate("UPDATE new_table SET name='sergey' WHERE id=6;");            //System.out.println(i);            // метод Query позволяет делать Селекты            //ResultSet result = statement.executeQuery("SELECT * FROM new_table");            // пакетная обработка, вставка нескольких записей            //statement.addBatch("INSERT INTO new_table (name, age, email) VALUES ('stas', 45, 'non')");            //statement.addBatch("INSERT INTO new_table (name, age, email) VALUES ('ludmila', 70, 'non')");            //statement.executeBatch();            //  проверка статуса - закрыт ли наш стейтмент            //boolean status = statement.isClosed();            //System.out.println(status);            // установка соединения с базой            //statement.getConnection();            // закрытие соединения с базой            //statement.close();        } catch (SQLException e) {            e.printStackTrace();            }        }    }